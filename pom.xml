<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!-- Parent section (Spring Boot Starter Parent) -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.9</version> <!-- Use the latest stable version of Spring Boot -->
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.example</groupId>
    <artifactId>voting-app</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>voting-app</name>
    <description>Voting Application using Spring Boot</description>
    <packaging>jar</packaging>

    <properties>
        <java.version>17</java.version> <!-- Ensure compatibility with Java 17 -->
        <!-- SonarQube Configuration -->
        <sonar.projectKey>voting-app-key</sonar.projectKey> <!-- Your project key in SonarQube -->
        <sonar.projectName>voting-app</sonar.projectName> <!-- Your project name in SonarQube -->
        <sonar.projectVersion>0.0.1-SNAPSHOT</sonar.projectVersion> <!-- Your project version -->
        <sonar.sources>src/main/java</sonar.sources> <!-- Your source directory -->
        <sonar.java.binaries>target/classes</sonar.java.binaries> <!-- Compiled bytecode location -->
        
        <!-- Explicitly exclude test files from being treated as source files -->
        <sonar.tests>src/test/java</sonar.tests> <!-- Directory containing test files -->
        <sonar.test.inclusions>**/*.java</sonar.test.inclusions> <!-- Only include Java files in test directory -->

        <!-- Timeout configuration for SonarQube analysis -->
        <sonar.ws.timeout>180</sonar.ws.timeout> <!-- Increased timeout (ensure no spaces or comments) -->
    </properties>

    <!-- Repositories section (Azure DevOps repository for dependencies) -->
    <repositories>
        <repository>
            <id>pavank839</id>
            <url>https://pkgs.dev.azure.com/pavank839/_packaging/pavank839/maven/v1</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <!-- Distribution Management section (Azure DevOps repository for deployments) -->
    <distributionManagement>
        <repository>
            <id>pavank839</id>
            <url>https://pkgs.dev.azure.com/pavank839/_packaging/pavank839/maven/v1</url>
        </repository>
    </distributionManagement>

    <dependencies>
        <!-- Spring Boot Web starter (for REST and MVC) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Thymeleaf template engine (to render HTML) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!-- Spring Boot Test Starter (for testing) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Spring Boot DevTools (optional, for automatic reloading during development) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Spring Data JPA (if you later decide to integrate with a database) -->
        <!-- Uncomment if you want to use Spring Data JPA -->
        <!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        -->

        <!-- H2 Database (optional, for local database in-memory) -->
        <!-- Uncomment if you need an in-memory database for development -->
        <!--
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        -->

    </dependencies>

    <!-- Build section -->
    <build>
        <plugins>
            <!-- Spring Boot Maven Plugin (for running and building the application) -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- Maven Compiler Plugin (for compiling Java code with specific JDK version) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!-- SonarQube Plugin (for analysis) -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>4.0.0.4121</version> <!-- Ensure you're using the latest stable version -->
            </plugin>

            <!-- Surefire Plugin (for unit testing reports) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <includes>
                        <include>**/Test*.java</include>
                    </includes>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
